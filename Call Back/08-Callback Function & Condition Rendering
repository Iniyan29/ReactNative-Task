import * as React from 'react';
import {
  Button,
  Text,
  View,
  StyleSheet,
  TextInput,
  TouchableOpacity,
  Alert,
  Image,
} from 'react-native';

export default class App extends React.Component {
  constructor(props) {
    super(props);
    // console.log('constructor executed');

    this.state = {
      ShowTextInput: true,
      ShowButton: true,
      TextInputValue: "",
      ValidMessage:false,
      InvalidMessage:false
    }
  }

  HandleButtonPress = () => {
     if(this.state.TextInputValue.length===10){
      this.setState({ShowTextInput:false})
      this.setState({ShowButton:false})
      this.setState({ValidMessage:true})
     }
     else{
      this.setState({ShowTextInput:false})
      this.setState({ShowButton:false})
      this.setState({InvalidMessage:true})
     }
  }

  ShowTextInputandButton=()=>{
    return (
     
        <View style={{flexDirection:"row"}}>
        
          <TextInput style={{ 
            height: 35,
            width: 100, 
            borderRadius: 3, 
            backgroundColor: "white" }} 
            onChangeText={(value) => this.setState({TextInputValue:value})}>
            </TextInput> 
          <Button 
          title='submit' 
          onPress={() => this.HandleButtonPress()}>
          </Button>
          </View>
        
          )
  }

  ShowValidMessage=()=>{
    return(
    
      <Text 
      style={{
        fontWeight:"bold",
        color:"white",
        fontSize:20
        }}>Valid
        </Text>
    )
  }

  ShowInvalidMessage=()=>{
    return(
    
      <Text 
      style={{
        fontWeight:"bold",
        color:"white",
        fontSize:20
        }}>Invalid
        </Text>
    )
  }
  render() {
    console.log("render exe")
     return(
     
    <View style={{
      flex: 1,
      justifyContent: "center",
      alignItems: 'center',
      flexDirection: 'row',
      backgroundColor: "black"
    }}>


    {this.state.ShowTextInput ?
    this.ShowTextInputandButton() : null}
    {this.state.ValidMessage?
    this.ShowValidMessage():null}
    {this.state.InvalidMessage?
    this.ShowInvalidMessage():null}
       </View>
     )        
  }
}

